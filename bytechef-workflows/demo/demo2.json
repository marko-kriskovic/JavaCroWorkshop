{
  "label": "DEMO 3",
  "description": "",
  "inputs": [],
  "triggers": [
    {
      "label": "GitHub",
      "name": "trigger_1",
      "parameters": {
        "repository": "JavaCroWorkshop"
      },
      "type": "github/v1/newIssue",
      "metadata": {
        "ui": {
          "dynamicPropertyTypes": {}
        }
      }
    }
  ],
  "tasks": [
    {
      "label": "OpenAI",
      "name": "openAi_1",
      "parameters": {
        "format": "SIMPLE",
        "response": {
          "responseFormat": "JSON",
          "responseSchema": "{\"type\":\"object\",\"title\":\"result\",\"properties\":{\"isEnoughInformation\":{\"type\":\"boolean\",\"title\":\"is enough information\"}}}"
        },
        "n": 1,
        "temperature": 1,
        "topP": 1,
        "frequencyPenalty": 0,
        "presencePenalty": 0,
        "model": "gpt-4.1",
        "systemPrompt": "You will be given a ticket with a problem. Determine if the ticket has enough information for finding where in the codebase the potential problem is.",
        "userPrompt": "Title: ${trigger_1.issue.title}; Body: ${trigger_1.issue.body}; "
      },
      "type": "openAi/v1/ask",
      "metadata": {
        "ui": {
          "dynamicPropertyTypes": {
            "systemPrompt": "STRING",
            "userPrompt": "STRING"
          }
        }
      }
    },
    {
      "label": "Condition",
      "name": "condition_1",
      "parameters": {
        "rawExpression": false,
        "caseFalse": [
          {
            "label": "GitHub",
            "name": "github_1",
            "parameters": {
              "repository": "JavaCroWorkshop",
              "issue": "${trigger_1.issue.number}",
              "labels": [
                "humanNeeded"
              ]
            },
            "type": "github/v1/addLabelsToIssue",
            "metadata": {
              "ui": {
                "dynamicPropertyTypes": {
                  "issue": "STRING"
                }
              }
            }
          }
        ],
        "caseTrue": [
          {
            "label": "Claude Code",
            "name": "claudeCode_1",
            "parameters": {
              "script": "Analyze the issue: ${trigger_1.issue.url}. Try to fix the issue and create a pull request on a new branch."
            },
            "type": "claudeCode/v1/chat",
            "metadata": {
              "ui": {
                "dynamicPropertyTypes": {
                  "script": "STRING"
                }
              }
            }
          },
          {
            "label": "OpenAI",
            "name": "openAi_2",
            "parameters": {
              "format": "SIMPLE",
              "response": {
                "responseFormat": "JSON",
                "responseSchema": "{\"$schema\":\"https://json-schema.org/draft/2020-12/schema\",\"properties\":{\"solved\":{\"type\":\"boolean\",\"title\":\"solved\"}},\"required\":[],\"type\":\"object\",\"title\":\"result\"}"
              },
              "n": 1,
              "temperature": 1,
              "topP": 1,
              "frequencyPenalty": 0,
              "presencePenalty": 0,
              "model": "gpt-4.1",
              "userPrompt": "${bash_1}",
              "systemPrompt": "You will receive an answer from Claude Code. Determine from the response if the problem is solved"
            },
            "type": "openAi/v1/ask",
            "metadata": {
              "ui": {
                "dynamicPropertyTypes": {
                  "userPrompt": "STRING",
                  "systemPrompt": "STRING"
                }
              }
            }
          },
          {
            "label": "Condition",
            "name": "condition_2",
            "parameters": {
              "rawExpression": false,
              "caseFalse": [
                {
                  "label": "OpenAI",
                  "name": "openAi_3",
                  "parameters": {
                    "format": "SIMPLE",
                    "response": {
                      "responseFormat": "TEXT"
                    },
                    "n": 1,
                    "temperature": 1,
                    "topP": 1,
                    "frequencyPenalty": 0,
                    "presencePenalty": 0,
                    "model": "gpt-4.1",
                    "userPrompt": "Issue Title: ${trigger_1.issue.title}; Issue Body: ${trigger_1.issue.body}; Claude Answer:${bash_1}",
                    "systemPrompt": "You need to give a constructive comment on a ticket as to why the issue is not solved by Claude."
                  },
                  "type": "openAi/v1/ask",
                  "metadata": {
                    "ui": {
                      "dynamicPropertyTypes": {
                        "userPrompt": "STRING",
                        "systemPrompt": "STRING"
                      }
                    }
                  }
                },
                {
                  "label": "GitHub",
                  "name": "github_3",
                  "parameters": {
                    "body": "${openAi_3}",
                    "repository": "JavaCroWorkshop",
                    "issue": "${trigger_1.issue.number}"
                  },
                  "type": "github/v1/createCommentOnIssue",
                  "metadata": {
                    "ui": {
                      "dynamicPropertyTypes": {
                        "body": "STRING",
                        "issue": "STRING"
                      }
                    }
                  }
                }
              ],
              "caseTrue": [
                {
                  "label": "GitHub",
                  "name": "github_2",
                  "parameters": {
                    "repository": "JavaCroWorkshop",
                    "issue": "${trigger_1.issue.number}",
                    "labels": [
                      "SolvedByAI"
                    ]
                  },
                  "type": "github/v1/addLabelsToIssue",
                  "metadata": {
                    "ui": {
                      "dynamicPropertyTypes": {
                        "issue": "STRING"
                      }
                    }
                  }
                }
              ],
              "conditions": [
                [
                  {
                    "type": "boolean",
                    "value1": true,
                    "value2": "${openAi_2.solved}",
                    "operation": "EQUALS"
                  }
                ]
              ]
            },
            "type": "condition/v1",
            "metadata": {
              "ui": {
                "dynamicPropertyTypes": {
                  "conditions[0]": "ARRAY",
                  "conditions[0][0]": "OBJECT",
                  "conditions[0][0].value2": "BOOLEAN"
                }
              }
            }
          }
        ],
        "conditions": [
          [
            {
              "type": "boolean",
              "value1": true,
              "value2": "${openAi_1.isEnoughInformation}",
              "operation": "EQUALS"
            }
          ]
        ]
      },
      "type": "condition/v1",
      "metadata": {
        "ui": {
          "dynamicPropertyTypes": {
            "conditions[0]": "ARRAY",
            "conditions[0][0]": "OBJECT",
            "conditions[0][0].value2": "BOOLEAN"
          }
        }
      }
    }
  ]
}